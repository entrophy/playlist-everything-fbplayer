// Generated by CoffeeScript 1.6.2
(function() {
  var SongService, app, testAPI;

  console.log("Playlist Everything Facebook Player");

  SongService = (function() {
    function SongService() {
      this.songs = [];
      this.callbacks = [];
    }

    SongService.prototype.add = function(song) {
      var callback, _i, _len, _ref, _results;

      _ref = this.callbacks['add'] || [];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        callback = _ref[_i];
        _results.push(callback.call(this, song));
      }
      return _results;
    };

    SongService.prototype.on = function(event, callback) {
      return (this.callbacks[event] = this.callbacks[event] || []).push(callback);
    };

    return SongService;

  })();

  app = angular.module('PlaylistEverythingFacebookPlayer', []);

  app.factory('SongService', function() {
    return new SongService();
  });

  app.controller('SongListCtrl', function($scope, SongService) {
    $scope.songs = [
      {
        title: 'test'
      }
    ];
    SongService.on('add', function(song) {
      console.log("!!!");
      return console.log(song);
    });
    return this;
  });

  app.controller('UrlSearchCtrl', function($scope, SongService) {
    var _this = this;

    $scope.url = void 0;
    $scope.invalid = false;
    $scope["private"] = false;
    console.log("here");
    $scope.change = _.debounce(function() {
      console.log($scope.url);
      $scope.invalid = false;
      $scope["private"] = false;
      $scope.$apply();
      if ($scope.url) {
        return FB.api($scope.url, function(response) {
          if (response.error && response.error.code === 803) {
            $scope.invalid = true;
            return $scope.$apply();
          } else {
            $scope.invalid = false;
            $scope.$apply();
            return FB.api($scope.url + '/posts', function(response) {
              if (response.error && response.error.code === 104) {
                $scope["private"] = true;
                return $scope.$apply();
              } else {
                $scope["private"] = false;
                $scope.$apply();
                console.log(response);
                return SongService.add({
                  title: 'a song'
                });
              }
            });
          }
        });
      }
    }, 400);
    $scope.isValid = function(url) {
      console.log("checking if valid");
      return false;
    };
    $scope.isPublic = function(url) {
      console.log("checking if public");
      return false;
    };
    return this;
  });

  window.fbAsyncInit = function() {
    FB.init({
      appId: '228230950634896',
      channelUrl: '//www.playlist-everything.dk:3000/fb-channel',
      status: true,
      cookie: true,
      xfbml: true
    });
    return FB.Event.subscribe('auth.authResponseChange', function(response) {
      if (response.status === 'connected') {
        return testAPI();
      } else if (response.status === 'not_authorized') {
        return FB.login();
      } else {
        return FB.login();
      }
    });
  };

  (function(d) {
    var id, js, ref;

    id = 'facebook-jssdk';
    ref = d.getElementsByTagName('script')[0];
    if (!d.getElementById(id)) {
      js = d.createElement('script');
      js.id = id;
      js.async = true;
      js.src = '//connect.facebook.net/en_US/all.js';
      return ref.parentNode.insertBefore(js, ref);
    }
  })(document);

  testAPI = function() {
    console.log('Welcome!  Fetching your information.... ');
    return FB.api('/me', function(response) {
      return console.log('Good to see you, ' + response.name + '.');
    });
  };

  $('document').ready(function() {});

}).call(this);
