// Generated by CoffeeScript 1.6.2
(function() {
  var FBLoadedCallback, app, player, queue;

  console.log("Playlist Everything Facebook Player");

  FBLoadedCallback = function() {
    return console.log("NIOPE");
  };

  window.fbAsyncInit = function() {
    FB.init({
      appId: '228230950634896',
      channelUrl: '//playlisteverything.eu01.aws.af.cm/fb-channel',
      status: true,
      cookie: true,
      xfbml: true
    });
    return FB.Event.subscribe('auth.authResponseChange', function(response) {
      return FBLoadedCallback();
    });
  };

  player = new Player();

  player.element('player');

  queue = new Queue();

  queue.player = player;

  $(document).ready(function() {
    $('#prev').click(function() {
      console.log("click prev");
      return queue.prev();
    });
    $('#play').click(function() {
      console.log("click play");
      return queue.play();
    });
    $('#pause').click(function() {
      console.log("click pause");
      return queue.pause();
    });
    $('#stop').click(function() {
      console.log("click stop");
      return queue.pause();
    });
    return $('#next').click(function() {
      console.log("click next");
      return queue.next();
    });
  });

  app = angular.module('PlaylistEverythingFacebookPlayer', []).config(function($locationProvider) {
    return $locationProvider.html5Mode(true);
  });

  app.service('SongService', this.SongService);

  app.service('FBService', this.FBService);

  app.controller('SongsCtrl', function($scope, SongService, FBService) {
    var _this = this;

    console.log(" --> SongsCtrl");
    ($scope.resetVisibility = function() {
      $scope.visible = {};
      return $scope.visible.loading = false;
    })();
    $scope.songs = [];
    SongService.on('add', function(song) {
      queue.add(song);
      $scope.songs = SongService.all();
      return $scope.$apply();
    });
    SongService.on('remove', function(song) {
      $scope.songs = SongService.all();
      return $scope.$apply();
    });
    $scope.loadPosts = function() {
      if (!$scope.visible.loading) {
        $scope.visible.loading = true;
        FBService.getPosts(function(err, posts) {
          console.log(err);
          SongService.add(posts);
          return $scope.visible.loading = false;
        });
        $scope.$apply();
      }
      return false;
    };
    $scope.$on('loadPosts', function() {
      return $scope.loadPosts();
    });
    return $(window).scroll(function() {
      if ($(window).scrollTop() + $(window).height() === $(document).height()) {
        return $scope.loadPosts();
      }
    });
  });

  app.controller('PageCtrl', function($scope, $rootScope, $location, SongService, FBService) {
    var _this = this;

    console.log(" --> PageCtrl");
    ($scope.resetVisibility = function() {
      $scope.visible = {};
      $scope.visible.invalid = false;
      $scope.visible["private"] = false;
      $scope.visible.page = false;
      return $scope.visible.search = true;
    })();
    $scope.page = null;
    $scope.url = $location.absUrl().split('/').pop();
    $scope.loadPage = function() {
      $scope.resetVisibility();
      FBService.setPageUrl($scope.url);
      FBService.getPage(function(err, page) {
        console.log(err);
        if (err === "invalid") {
          $scope.visible.invalid = true;
        } else if (err === "private") {
          $scope.visible["private"] = true;
        } else {
          $scope.visible.search = false;
          $scope.visible.page = true;
          $scope.page = page;
          $location.path(page.link.split('/').pop());
          $location.replace();
          $rootScope.$broadcast("loadPosts");
        }
        return $scope.$apply();
      });
      return false;
    };
    $scope.unloadPage = function() {
      $scope.page = null;
      $scope.resetVisibility();
      $('#url-search').focus();
      SongService.clear();
      FBService.clear();
      return false;
    };
    FBLoadedCallback = function() {
      if ($scope.url) {
        return $scope.loadPage();
      }
    };
    return this;
  });

  (function(d) {
    var id, js, ref;

    id = 'facebook-jssdk';
    ref = d.getElementsByTagName('script')[0];
    if (!d.getElementById(id)) {
      js = d.createElement('script');
      js.id = id;
      js.async = true;
      js.src = '//connect.facebook.net/en_US/all.js';
      return ref.parentNode.insertBefore(js, ref);
    }
  })(document);

}).call(this);
